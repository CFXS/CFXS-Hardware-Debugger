#pragma once
#include <DynamicLibrary.hpp>
#include "JLink_Types.hpp"

namespace HWD::Probe::Driver {

    class JLink_Driver {
    public:
        //

    public:
        JLink_Driver();
        ~JLink_Driver() = default;

        bool IsLoaded() const {
            return m_Loaded;
        }

    private:
        void LoadFunctionPointers();

    private:
        std::unique_ptr<DynamicLibrary> m_Library;
        bool m_Loaded = false;

    public: // library functions
        int (*Configure)(const char* pConfig)                                                                                     = nullptr;
        int (*DownloadFile)(const char* sFileName, uint32_t Addr)                                                                 = nullptr;
        int (*GetAvailableLicense)(char* pBuffer, uint32_t BufferSize)                                                            = nullptr;
        const uint8_t* (*GetPCode)(int PCodeIndex, uint32_t* pNumBytes)                                                           = nullptr;
        int (*PrintConfig)(const char* pConfig, uint32_t Mask, char* pBuffer, uint32_t BufferSize)                                = nullptr;
        int (*EraseChip)(void)                                                                                                    = nullptr;
        void (*AddMirrorArea)(uint32_t Addr)                                                                                      = nullptr;
        void (*AddMirrorAreaEx)(uint32_t Addr, uint32_t Size)                                                                     = nullptr;
        void (*BeginDownload)(uint32_t Flags)                                                                                     = nullptr;
        uint8_t (*Clock)(void)                                                                                                    = nullptr;
        void (*Close)(void)                                                                                                       = nullptr;
        int (*ClrBP)(unsigned BPIndex)                                                                                            = nullptr;
        int (*ClrBPEx)(int BPHandle)                                                                                              = nullptr;
        int (*ClrDataEvent)(uint32_t Handle)                                                                                      = nullptr;
        void (*ClrError)(void)                                                                                                    = nullptr;
        void (*ClrRESET)(void)                                                                                                    = nullptr;
        int (*ClrTCK)(void)                                                                                                       = nullptr;
        void (*ClrTDI)(void)                                                                                                      = nullptr;
        void (*ClrTMS)(void)                                                                                                      = nullptr;
        void (*ClrExecTime)(void)                                                                                                 = nullptr;
        void (*ClrTRST)(void)                                                                                                     = nullptr;
        int (*ClrWP)(int WPHandle)                                                                                                = nullptr;
        int (*Communicate)(const void* pWrite, int WrSize, void* pRead, int RdSize)                                               = nullptr;
        int (*CommunicateEx)(const void* pWrite, int WrSize, void* pRead, int RdSize, char IsCommand)                             = nullptr;
        void (*ConfigJTAG)(int IRPre, int DRPre)                                                                                  = nullptr;
        int (*Connect)(void)                                                                                                      = nullptr;
        void (*Core2CoreName)(uint32_t core, char* pBuffer, unsigned BufferSize)                                                  = nullptr;
        void (*EnableFlashCache)(char enable)                                                                                     = nullptr;
        void (*EnableLog)(JLink_Types::LogCallback* pfLog)                                                                        = nullptr;
        void (*EnableLogCom)(JLink_Types::LogCallback* pfLog)                                                                     = nullptr;
        void (*EnablePerformanceCnt)(uint32_t Index, uint32_t OnOff)                                                              = nullptr;
        void (*EnableSoftBPs)(char Enable)                                                                                        = nullptr;
        int (*EndDownload)(void)                                                                                                  = nullptr;
        int (*ExecCommand)(const char* pIn, char* pOut, int BufferSize)                                                           = nullptr;
        void (*ExecECode)(void)                                                                                                   = nullptr;
        int (*FindBP)(uint32_t Addr)                                                                                              = nullptr;
        int (*FreeMem)(void* pMem)                                                                                                = nullptr;
        uint32_t (*GetBPInfo)(int BPHandle)                                                                                       = nullptr;
        int (*GetBPInfoEx)(int iBP, JLink_Types::BreakpointInfo* pInfo)                                                           = nullptr;
        const char* (*GetCompileDateTime)(void)                                                                                   = nullptr;
        void (*GetConfigData)(int* pIRPre, int* pDRPre)                                                                           = nullptr;
        int (*GetDebugInfo)(uint32_t Index, uint32_t* pInfo)                                                                      = nullptr;
        int (*GetDeviceFamily)(void)                                                                                              = nullptr;
        uint32_t (*GetDLLVersion)(void)                                                                                           = nullptr;
        int (*GetEmbeddedFWString)(const char* sFWId, char* pBuffer, uint32_t BufferSize)                                         = nullptr;
        uint32_t (*GetEmuCaps)(void)                                                                                              = nullptr;
        void (*GetEmuCapsEx)(uint8_t* pCaps, int BufferSize)                                                                      = nullptr;
        void (*GetExecTime)(uint32_t* pExecTimeLow, uint32_t* pExecTimeHigh)                                                      = nullptr;
        void (*GetFeatureString)(char* pOut)                                                                                      = nullptr;
        void (*GetFirmwareString)(char* s, int BufferSize)                                                                        = nullptr;
        int (*GetHardwareVersion)(void)                                                                                           = nullptr;
        int (*GetHWInfo)(uint32_t BitMask, uint32_t* pHWInfo)                                                                     = nullptr;
        int (*GetHWStatus)(JLink_Types::HardwareStatus* pStat)                                                                    = nullptr;
        uint32_t (*GetId)(void)                                                                                                   = nullptr;
        int (*GetMOEs)(JLink_Types::MOE_Info* pInfo, int MaxNumMOEs)                                                              = nullptr;
        uint32_t (*GetNumBPs)(void)                                                                                               = nullptr;
        int (*GetNumBPUnits)(uint32_t Type)                                                                                       = nullptr;
        unsigned (*GetNumWPs)(void)                                                                                               = nullptr;
        int (*GetNumWPUnits)(void)                                                                                                = nullptr;
        char (*GetOEMString)(char* pOut)                                                                                          = nullptr;
        uint32_t (*GetPerformanceCnt)(uint32_t Index)                                                                             = nullptr;
        void* (*GetpSharedMem)(void)                                                                                              = nullptr;
        int (*GetRegisterList)(uint32_t* paList, int MaxNumItems)                                                                 = nullptr;
        const char* (*GetRegisterName)(uint32_t RegIndex)                                                                         = nullptr;
        int (*GetResetTypeDesc)(int ResetType, const char** psResetName, const char** psResetDesc)                                = nullptr;
        int (*GetScanLen)(void)                                                                                                   = nullptr;
        uint16_t (*GetSelDevice)(void)                                                                                            = nullptr;
        int (*GetSN)(void)                                                                                                        = nullptr;
        uint16_t (*GetSpeed)(void)                                                                                                = nullptr;
        void (*GetSpeedInfo)(JLink_Types::SpeedInfo* pSpeedInfo)                                                                  = nullptr;
        int (*GetWPInfoEx)(int iWP, JLink_Types::WatchpointInfo* pInfo)                                                           = nullptr;
        void (*Go)(void)                                                                                                          = nullptr;
        void (*GoAllowSim)(uint32_t NumInsts)                                                                                     = nullptr;
        void (*GoEx)(uint32_t MaxEmulInsts, uint32_t Flags)                                                                       = nullptr;
        int (*GoHalt)(uint32_t NumClocks)                                                                                         = nullptr;
        void (*GoIntDis)(void)                                                                                                    = nullptr;
        char (*Halt)(void)                                                                                                        = nullptr;
        int (*HasError)(void)                                                                                                     = nullptr;
        char (*IsConnected)(void)                                                                                                 = nullptr;
        char (*IsHalted)(void)                                                                                                    = nullptr;
        char (*IsOpen)(void)                                                                                                      = nullptr;
        void (*Lock)(void)                                                                                                        = nullptr;
        int (*MeasureCPUSpeed)(uint32_t RAMAddr, int PreserveMem)                                                                 = nullptr;
        int (*MeasureCPUSpeedEx)(uint32_t RAMAddr, int PreserveMem, int AllowFail)                                                = nullptr;
        const char* (*Open)(void)                                                                                                 = nullptr;
        const char* (*OpenEx)(JLink_Types::LogCallback* pfLog, JLink_Types::LogCallback* pfErrorOut)                              = nullptr;
        int (*ReadCodeMem)(uint32_t Addr, uint32_t NumBytes, void* pData)                                                         = nullptr;
        int (*ReadConfigReg)(uint32_t RegIndex, uint32_t* pData)                                                                  = nullptr;
        int (*ReadControlReg)(uint32_t RegIndex, uint32_t* pData)                                                                 = nullptr;
        int (*ReadDCC)(uint32_t* pData, uint32_t NumItems, int TimeOut)                                                           = nullptr;
        void (*ReadDCCFast)(uint32_t* pData, uint32_t NumItems)                                                                   = nullptr;
        int (*ReadTerminal)(uint8_t* pBuffer, uint32_t BufferSize)                                                                = nullptr;
        int (*ReadDebugPort)(uint32_t RegIndex, uint32_t* pData)                                                                  = nullptr;
        int (*ReadDebugReg)(uint32_t RegIndex, uint32_t* pData)                                                                   = nullptr;
        int (*ReadEmu)(void* p, uint32_t NumBytes)                                                                                = nullptr;
        int (*ReadEmuConfigMem)(uint8_t* p, uint32_t Off, uint32_t NumBytes)                                                      = nullptr;
        uint32_t (*ReadICEReg)(int RegIndex)                                                                                      = nullptr;
        int (*ReadMem)(uint32_t Addr, uint32_t NumBytes, void* pData)                                                             = nullptr;
        int (*ReadMemEx)(uint32_t Addr, uint32_t NumBytes, void* pData, uint32_t Flags)                                           = nullptr;
        int (*ReadMemHW)(uint32_t Addr, uint32_t Count, void* pData)                                                              = nullptr;
        int (*ReadMemIndirect)(uint32_t Addr, uint32_t NumBytes, void* pData)                                                     = nullptr;
        int (*ReadMemU8)(uint32_t Addr, uint32_t NumItems, uint8_t* pData, uint8_t* pStatus)                                      = nullptr;
        int (*ReadMemU16)(uint32_t Addr, uint32_t NumItems, uint16_t* pData, uint8_t* pStatus)                                    = nullptr;
        int (*ReadMemU32)(uint32_t Addr, uint32_t NumItems, uint32_t* pData, uint8_t* pStatus)                                    = nullptr;
        int (*ReadMemU64)(uint32_t Addr, uint32_t NumItems, uint64_t* pData, uint8_t* pStatus)                                    = nullptr;
        int (*ReadMemZonedEx)(uint32_t Addr, uint32_t NumBytes, void* pData, uint32_t Flags, const char* sZone)                   = nullptr;
        uint32_t (*ReadReg)(JLink_Types::CPU_Registers::ARM RegIndex)                                                             = nullptr;
        int (*ReadRegs)(const uint32_t* paRegIndex, uint32_t* paData, uint8_t* paStatus, uint32_t NumRegs)                        = nullptr;
        int (*Reset)(void)                                                                                                        = nullptr;
        void (*ResetNoHalt)(void)                                                                                                 = nullptr;
        void (*ResetPullsRESET)(uint8_t OnOff)                                                                                    = nullptr;
        void (*ResetPullsTRST)(uint8_t OnOff)                                                                                     = nullptr;
        void (*ResetTRST)(void)                                                                                                   = nullptr;
        void (*SelectDeviceFamily)(int DeviceFamily)                                                                              = nullptr;
        char (*SelectIP)(const char* sHost, int Port)                                                                             = nullptr;
        void (*SelectTraceSource)(int Source)                                                                                     = nullptr;
        char (*SelectUSB)(int Port)                                                                                               = nullptr;
        int (*SetBP)(unsigned BPIndex, uint32_t Addr)                                                                             = nullptr;
        int (*SetBPEx)(uint32_t Addr, uint32_t TypeFlags)                                                                         = nullptr;
        int (*SetCoreIndex)(unsigned CoreIndex)                                                                                   = nullptr;
        int (*SetDataEvent)(JLink_Types::DataEvent* pEvent, uint32_t* pHandle)                                                    = nullptr;
        void (*SetDebugUnitBlockMask)(int Type, uint32_t Mask)                                                                    = nullptr;
        int (*SetEndian)(int v)                                                                                                   = nullptr;
        void (*SetErrorOutHandler)(JLink_Types::LogCallback* pfErrorOut)                                                          = nullptr;
        int (*SetHookUnsecureDialog)(JLink_Types::UnsecureDialogHook* pfHook)                                                     = nullptr;
        int (*SetInitRegsOnReset)(int v)                                                                                          = nullptr;
        void (*SetLogFile)(const char* sFilename)                                                                                 = nullptr;
        void (*SetMaxSpeed)(void)                                                                                                 = nullptr;
        void (*SetRESET)(void)                                                                                                    = nullptr;
        void (*SetResetDelay)(int ms)                                                                                             = nullptr;
        int (*SetResetPara)(int Value)                                                                                            = nullptr;
        JLink_Types::ResetType (*SetResetType)(JLink_Types::ResetType ResetType)                                                  = nullptr;
        void (*SetSpeed)(uint32_t Speed)                                                                                          = nullptr;
        int (*SetTCK)(void)                                                                                                       = nullptr;
        void (*SetTDI)(void)                                                                                                      = nullptr;
        void (*SetTMS)(void)                                                                                                      = nullptr;
        void (*SetTRST)(void)                                                                                                     = nullptr;
        void (*SetWaitFunction)(JLink_Types::WaitFunction, void* pContext)                                                        = nullptr;
        void (*SetWarnOutHandler)(JLink_Types::LogCallback* pfWarnOut)                                                            = nullptr;
        int (*SetWP)(uint32_t Addr, uint32_t AddrMask, uint32_t Data, uint32_t DataMask, uint8_t Ctrl, uint8_t CtrlMask)          = nullptr;
        char (*SimulateInstruction)(uint32_t Inst)                                                                                = nullptr;
        char (*Step)(void)                                                                                                        = nullptr;
        void (*StoreBits)(uint32_t TMS, uint32_t TDI, int NumBits)                                                                = nullptr;
        int (*Test)(void)                                                                                                         = nullptr;
        void (*Unlock)(void)                                                                                                      = nullptr;
        uint16_t (*UpdateFirmware)(void)                                                                                          = nullptr;
        uint32_t (*UpdateFirmwareIfNewer)(void)                                                                                   = nullptr;
        int (*UpdateReplaceFirmware)(int Replace, const char* sInfo)                                                              = nullptr;
        int (*WaitDCCRead)(int TimeOut)                                                                                           = nullptr;
        int (*WaitForHalt)(int TimeOut)                                                                                           = nullptr;
        int (*WriteConfigReg)(uint32_t RegIndex, uint32_t Data)                                                                   = nullptr;
        int (*WriteControlReg)(uint32_t RegIndex, uint32_t Data)                                                                  = nullptr;
        int (*WriteDCC)(const uint32_t* pData, uint32_t NumItems, int TimeOut)                                                    = nullptr;
        void (*WriteDCCFast)(const uint32_t* pData, uint32_t NumItems)                                                            = nullptr;
        int (*WriteDebugPort)(uint32_t RegIndex, uint32_t Data)                                                                   = nullptr;
        int (*WriteDebugReg)(uint32_t RegIndex, uint32_t Data)                                                                    = nullptr;
        int (*WriteEmu)(const void* p, uint32_t NumBytes)                                                                         = nullptr;
        int (*WriteEmuConfigMem)(const uint8_t* p, uint32_t Off, uint32_t NumBytes)                                               = nullptr;
        void (*WriteICEReg)(uint32_t RegIndex, uint32_t Value, int AllowDelay)                                                    = nullptr;
        int (*WriteMem)(uint32_t Addr, uint32_t Count, const void* pData)                                                         = nullptr;
        int (*WriteMemDelayed)(uint32_t Addr, uint32_t Count, const void* pData)                                                  = nullptr;
        int (*WriteMemEx)(uint32_t Addr, uint32_t NumBytes, const void* p, uint32_t Flags)                                        = nullptr;
        int (*WriteMemHW)(uint32_t Addr, uint32_t Count, const void* p)                                                           = nullptr;
        int (*WriteMemMultiple)(JLink_Types::WriteMemoryDescriptor* paDesc, uint32_t NumWrites)                                   = nullptr;
        char (*WriteReg)(JLink_Types::CPU_Registers::ARM RegIndex, uint32_t Data)                                                 = nullptr;
        int (*WriteRegs)(const uint32_t* paRegIndex, const uint32_t* paData, uint8_t* paStatus, uint32_t NumRegs)                 = nullptr;
        int (*WriteU8)(uint32_t Addr, uint8_t Data)                                                                               = nullptr;
        int (*WriteU16)(uint32_t Addr, uint16_t Data)                                                                             = nullptr;
        int (*WriteU32)(uint32_t Addr, uint32_t Data)                                                                             = nullptr;
        int (*WriteU64)(uint32_t Addr, uint64_t Data)                                                                             = nullptr;
        int (*WriteMemZonedEx)(uint32_t Addr, uint32_t NumBytes, const void* p, uint32_t Flags, const char* sZone)                = nullptr;
        int (*WriteVectorCatch)(uint32_t Value)                                                                                   = nullptr;
        int (*WriteVerifyMem)(uint32_t Addr, uint32_t NumBytes, const void* p, uint32_t Flags)                                    = nullptr;
        int (*BMI_Get)(uint32_t* pBMIMode)                                                                                        = nullptr;
        int (*BMI_Set)(uint32_t BMIMode)                                                                                          = nullptr;
        int (*CDC_Read)(uint8_t* pData, uint32_t NumBytes)                                                                        = nullptr;
        int (*CDC_SetBaudrate)(int BaudrateHz)                                                                                    = nullptr;
        int (*CDC_SetHookFuncs)(const uint8_t* pData, int NumBytes)                                                               = nullptr;
        int (*CDC_SetRTSState)(int State)                                                                                         = nullptr;
        int (*CDC_SetTimeoutLastCDCRead)(int Timeout)                                                                             = nullptr;
        int (*CDC_Write)(const uint8_t* pData, uint32_t NumBytes)                                                                 = nullptr;
        uint32_t (*CORE_GetFound)(void)                                                                                           = nullptr;
        void (*CORE_Select)(uint32_t Core)                                                                                        = nullptr;
        int (*CORESIGHT_Configure)(const char* sConfig)                                                                           = nullptr;
        int (*CORESIGHT_ReadAPDPReg)(uint8_t RegIndex, uint8_t APnDP, uint32_t* pData)                                            = nullptr;
        int (*CORESIGHT_WriteAPDPReg)(uint8_t RegIndex, uint8_t APnDP, uint32_t Data)                                             = nullptr;
        int (*CP15_IsPresent)(void)                                                                                               = nullptr;
        int (*CP15_ReadEx)(uint8_t CRn, uint8_t CRm, uint8_t op1, uint8_t op2, uint32_t* pData)                                   = nullptr;
        int (*CP15_ReadReg)(uint32_t RegIndex, uint32_t* pData)                                                                   = nullptr;
        int (*CP15_WriteEx)(uint8_t CRn, uint8_t CRm, uint8_t op1, uint8_t op2, uint32_t Data)                                    = nullptr;
        int (*CP15_WriteReg)(uint32_t RegIndex, uint32_t Data)                                                                    = nullptr;
        int (*DEVICE_GetIndex)(const char* sDeviceName)                                                                           = nullptr;
        int (*DEVICE_GetInfo)(int DeviceIndex, JLink_Types::DeviceInfo* pDeviceInfo)                                              = nullptr;
        int (*DIALOG_Configure)(const char* pConfigIn, char* pConfigOut, uint32_t BufferSize)                                     = nullptr;
        int (*DIALOG_ConfigureEx)(void* hParent, uint32_t Mask, const char* pConfigIn, char* pConfigOut, uint32_t BufferSize)     = nullptr;
        int (*EMU_GPIO_GetState)(const uint8_t* paIndex, uint8_t* paResult, uint32_t NumPorts)                                    = nullptr;
        int (*EMU_GPIO_SetState)(const uint8_t* paIndex, const uint8_t* paState, uint8_t* paResult, uint32_t NumPorts)            = nullptr;
        int (*EMU_AddLicense)(const char* sLic)                                                                                   = nullptr;
        int (*EMU_EraseLicenses)(void)                                                                                            = nullptr;
        int (*EMU_GetLicenses)(char* pBuffer, uint32_t BufferSize)                                                                = nullptr;
        int (*EMU_GetCounters)(uint32_t BitMask, uint32_t* pCounters)                                                             = nullptr;
        int (*GetProbeList)(JLink_Types::HostInterfaceType hostInterface, JLink_Types::ProbeInfo* paConnectInfo, size_t MaxInfos) = nullptr;
        uint32_t (*EMU_GetMaxMemBlock)(void)                                                                                      = nullptr;
        int (*EMU_GetNumConnections)(void)                                                                                        = nullptr;
        uint32_t (*GetConnectedProbeCount)(void)                                                                                  = nullptr;
        int (*EMU_GetProductId)(void)                                                                                             = nullptr;
        void (*EMU_GetProductName)(char* pBuffer, uint32_t BufferSize)                                                            = nullptr;
        int (*EMU_HasCapEx)(int CapEx)                                                                                            = nullptr;
        int (*EMU_HasCPUCap)(uint32_t CPUCap)                                                                                     = nullptr;
        char (*EMU_IsConnected)(void)                                                                                             = nullptr;
        uint32_t (*EMU_SelectByIndex)(uint32_t iEmu)                                                                              = nullptr;
        int (*EMU_SelectByUSBSN)(uint32_t SerialNo)                                                                               = nullptr;
        int (*EMU_SelectIP)(char* pIPAddr, int BufferSize, uint16_t* pPort)                                                       = nullptr;
        void (*EMU_SelectIPBySN)(uint32_t SerialNo)                                                                               = nullptr;
        int (*EMU_TestNRSpeed)(uint32_t NumReps, uint32_t NumBytes)                                                               = nullptr;
        int (*EMU_TestNWSpeed)(uint32_t NumReps, uint32_t NumBytes)                                                               = nullptr;
        int (*EMU_COM_IsSupported)(void)                                                                                          = nullptr;
        int (*EMU_COM_Read)(unsigned Channel, unsigned NumBytes, void* pData)                                                     = nullptr;
        int (*EMU_COM_Write)(unsigned Channel, unsigned NumBytes, const void* pData)                                              = nullptr;
        int (*EMU_FILE_Delete)(const char* sFile)                                                                                 = nullptr;
        int (*EMU_FILE_GetList)(const char* sFile, char* pBuffer, uint32_t BufferSize)                                            = nullptr;
        int (*EMU_FILE_GetSize)(const char* sFile)                                                                                = nullptr;
        int (*EMU_FILE_Read)(const char* sFile, uint8_t* pData, uint32_t Offset, uint32_t NumBytes)                               = nullptr;
        int (*EMU_FILE_Write)(const char* sFile, const uint8_t* pData, uint32_t Offset, uint32_t NumBytes)                        = nullptr;
        char (*ETB_IsPresent)(void)                                                                                               = nullptr;
        uint32_t (*ETB_ReadReg)(uint32_t RegIndex)                                                                                = nullptr;
        void (*ETB_WriteReg)(uint32_t RegIndex, uint32_t Data, int AllowDelay)                                                    = nullptr;
        char (*ETM_IsPresent)(void)                                                                                               = nullptr;
        uint32_t (*ETM_ReadReg)(uint32_t Reg)                                                                                     = nullptr;
        void (*ETM_StartTrace)(void)                                                                                              = nullptr;
        void (*ETM_WriteReg)(uint32_t Reg, uint32_t Data, int AllowDelay)                                                         = nullptr;
        void (*NET_Close)(void)                                                                                                   = nullptr;
        int (*NET_Open)(void)                                                                                                     = nullptr;
        int (*HSS_GetCaps)(JLink_Types::HSS_Capabilities* pCaps)                                                                  = nullptr;
        int (*HSS_Start)(JLink_Types::HSS_MemoryBlockDescriptor* paDesc, int NumBlocks, int Period_us, int Flags)                 = nullptr;
        int (*HSS_Stop)(void)                                                                                                     = nullptr;
        int (*HSS_Read)(void* pBuffer, uint32_t BufferSize)                                                                       = nullptr;
        int (*RAWTRACE_Control)(uint32_t Cmd, void* pData)                                                                        = nullptr;
        int (*RAWTRACE_Read)(uint8_t* pData, uint32_t NumBytes)                                                                   = nullptr;
        int (*RTTERMINAL_Control)(uint32_t Cmd, void* p)                                                                          = nullptr;
        int (*RTTERMINAL_Read)(uint32_t BufferIndex, char* sBuffer, uint32_t BufferSize)                                          = nullptr;
        int (*RTTERMINAL_Write)(uint32_t BufferIndex, const char* sBuffer, uint32_t BufferSize)                                   = nullptr;
        int (*STRACE_Config)(const char* sConfig)                                                                                 = nullptr;
        int (*STRACE_Control)(uint32_t Cmd, void* pData)                                                                          = nullptr;
        int (*STRACE_Read)(uint32_t* paItem, uint32_t NumItems)                                                                   = nullptr;
        int (*STRACE_GetInstStats)(void* paItem, uint32_t Addr, uint32_t NumItems, uint32_t SizeOfStruct, uint32_t Type)          = nullptr;
        int (*STRACE_Start)(void)                                                                                                 = nullptr;
        int (*STRACE_Stop)(void)                                                                                                  = nullptr;
        void (*SWD_GetData)(uint8_t* pOut, int BitPos, int NumBits)                                                               = nullptr;
        uint32_t (*SWD_GetU8)(int BitPos)                                                                                         = nullptr;
        uint32_t (*SWD_GetU16)(int BitPos)                                                                                        = nullptr;
        uint32_t (*SWD_GetU32)(int BitPos)                                                                                        = nullptr;
        void (*SWD_StoreGetRaw)(const uint8_t* pDir, const uint8_t* pIn, uint8_t* pOut, uint32_t NumBits)                         = nullptr;
        int (*SWD_StoreRaw)(const uint8_t* pDir, const uint8_t* pIn, uint32_t NumBits)                                            = nullptr;
        void (*SWD_SyncBits)(void)                                                                                                = nullptr;
        void (*SWD_SyncBytes)(void)                                                                                               = nullptr;
        int (*SWD_DisableSWCLK)(void)                                                                                             = nullptr;
        int (*SWD_EnableSWCLK)(void)                                                                                              = nullptr;
        int (*SWD_SetDirIn)(void)                                                                                                 = nullptr;
        int (*SWD_SetDirOut)(void)                                                                                                = nullptr;
        int (*SWO_Control)(uint32_t Cmd, void* pData)                                                                             = nullptr;
        int (*SWO_DisableTarget)(uint32_t PortMask)                                                                               = nullptr;
        int (*SWO_EnableTarget)(uint32_t CPUSpeed, uint32_t SWOSpeed, int Mode, uint32_t PortMask)                                = nullptr;
        int (*SWO_GetCompatibleSpeeds)(uint32_t CPUSpeed, uint32_t MaxSWOSpeed, uint32_t* paSWOSpeed, uint32_t NumEntries)        = nullptr;
        void (*SWO_Read)(uint8_t* pData, uint32_t Offset, uint32_t* pNumBytes)                                                    = nullptr;
        int (*SWO_ReadStimulus)(int Port, uint8_t* pData, uint32_t NumBytes)                                                      = nullptr;
        void (*TIF_GetAvailable)(uint32_t* pMask)                                                                                 = nullptr;
        int (*TIF_Select)(JLink_Types::TargetInterface targetIf)                                                                  = nullptr;
        uint32_t (*TRACE_Control)(uint32_t Cmd, uint32_t* p)                                                                      = nullptr;
        uint32_t (*TRACE_Read)(JLink_Types::TraceData* pData, uint32_t Off, uint32_t* pNumItems)                                  = nullptr;
        char (*WA_AddRange)(uint32_t Addr, uint32_t NumBytes)                                                                     = nullptr;
        char (*WA_Restore)(void)                                                                                                  = nullptr;
        void (*SetFlashProgProgressCallback)(JLink_Types::FlashProgressCallback* pfOnFlashProgess)                                = nullptr;
    };

} // namespace HWD::Probe::Driver