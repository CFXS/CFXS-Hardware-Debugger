// [source]
#include "JLink_Driver.hpp"

namespace HWD::Probe::Driver {

    void JLink_Driver::LoadFunctionPointers() {
        probe_GetAvailableLicense         = m_Library->GetFunction<decltype(probe_GetAvailableLicense)>("JLINK_GetAvailableLicense");
        target_Erase                      = m_Library->GetFunction<decltype(target_Erase)>("JLINK_EraseChip");
        target_BeginDownload              = m_Library->GetFunction<decltype(target_BeginDownload)>("JLINKARM_BeginDownload");
        probe_Disconnect                  = m_Library->GetFunction<decltype(probe_Disconnect)>("JLINKARM_Close");
        target_ClearBreakpoint            = m_Library->GetFunction<decltype(target_ClearBreakpoint)>("JLINKARM_ClrBP");
        target_ClearBreakpointEx          = m_Library->GetFunction<decltype(target_ClearBreakpointEx)>("JLINKARM_ClrBPEx");
        target_ClearDataEvent             = m_Library->GetFunction<decltype(target_ClearDataEvent)>("JLINKARM_ClrDataEvent");
        library_ClearErrorState           = m_Library->GetFunction<decltype(library_ClearErrorState)>("JLINKARM_ClrError");
        target_ClearResetPin              = m_Library->GetFunction<decltype(target_ClearResetPin)>("JLINKARM_ClrRESET");
        target_Connect                    = m_Library->GetFunction<decltype(target_Connect)>("JLINKARM_Connect");
        probe_SetLogCallback              = m_Library->GetFunction<decltype(probe_SetLogCallback)>("JLINKARM_EnableLog");
        probe_SetCommunicationLogCallback = m_Library->GetFunction<decltype(probe_SetCommunicationLogCallback)>("JLINKARM_EnableLogCom");
        probe_EnableSoftwareBreakpoints   = m_Library->GetFunction<decltype(probe_EnableSoftwareBreakpoints)>("JLINKARM_EnableSoftBPs");
        target_EndDownload                = m_Library->GetFunction<decltype(target_EndDownload)>("JLINKARM_EndDownload");
        probe_ExecuteCommand              = m_Library->GetFunction<decltype(probe_ExecuteCommand)>("JLINKARM_ExecCommand");
        target_FindBreakpoint             = m_Library->GetFunction<decltype(target_FindBreakpoint)>("JLINKARM_FindBP");
        target_GetBreakpointInfo          = m_Library->GetFunction<decltype(target_GetBreakpointInfo)>("JLINKARM_GetBPInfo");
        target_GetBreakpointInfoEx        = m_Library->GetFunction<decltype(target_GetBreakpointInfoEx)>("JLINKARM_GetBPInfoEx");
        target_GetDebugInfo               = m_Library->GetFunction<decltype(target_GetDebugInfo)>("JLINKARM_GetDebugInfo");
        target_GetDeviceFamily            = m_Library->GetFunction<decltype(target_GetDeviceFamily)>("JLINKARM_GetDeviceFamily");
        library_GetVersion                = m_Library->GetFunction<decltype(library_GetVersion)>("JLINKARM_GetDLLVersion");
        probe_GetCapabilities             = m_Library->GetFunction<decltype(probe_GetCapabilities)>("JLINKARM_GetEmuCaps");
        probe_GetCapabilitiesEx           = m_Library->GetFunction<decltype(probe_GetCapabilitiesEx)>("JLINKARM_GetEmuCapsEx");
        probe_GetFeatureString            = m_Library->GetFunction<decltype(probe_GetFeatureString)>("JLINKARM_GetFeatureString");
        probe_GetFirmwareString           = m_Library->GetFunction<decltype(probe_GetFirmwareString)>("JLINKARM_GetFirmwareString");
        probe_GetHardwareVersion          = m_Library->GetFunction<decltype(probe_GetHardwareVersion)>("JLINKARM_GetHardwareVersion");
        target_GetHardwareInfo            = m_Library->GetFunction<decltype(target_GetHardwareInfo)>("JLINKARM_GetHWInfo");
        target_GetHardwareStatus          = m_Library->GetFunction<decltype(target_GetHardwareStatus)>("JLINKARM_GetHWStatus");
        target_Get_CPU_ID                 = m_Library->GetFunction<decltype(target_Get_CPU_ID)>("JLINKARM_GetId");
        target_GetDebugEntryReason        = m_Library->GetFunction<decltype(target_GetDebugEntryReason)>("JLINKARM_GetMOEs");
        probe_GetBreakpointCount          = m_Library->GetFunction<decltype(probe_GetBreakpointCount)>("JLINKARM_GetNumBPs");
        probe_GetAvailableBreakpointCount = m_Library->GetFunction<decltype(probe_GetAvailableBreakpointCount)>("JLINKARM_GetNumBPUnits");
        probe_GetWatchpointCount          = m_Library->GetFunction<decltype(probe_GetWatchpointCount)>("JLINKARM_GetNumWPs");
        probe_GetAvailableWatchpointCount = m_Library->GetFunction<decltype(probe_GetAvailableWatchpointCount)>("JLINKARM_GetNumWPUnits");
        target_GetRegisterList            = m_Library->GetFunction<decltype(target_GetRegisterList)>("JLINKARM_GetRegisterList");
        target_GetRegisterName            = m_Library->GetFunction<decltype(target_GetRegisterName)>("JLINKARM_GetRegisterName");
        target_GetResetTypeDescription    = m_Library->GetFunction<decltype(target_GetResetTypeDescription)>("JLINKARM_GetResetTypeDesc");
        probe_GetSerialNumber             = m_Library->GetFunction<decltype(probe_GetSerialNumber)>("JLINKARM_GetSN");
        target_GetSpeed                   = m_Library->GetFunction<decltype(target_GetSpeed)>("JLINKARM_GetSpeed");
        target_GetSpeedInfo               = m_Library->GetFunction<decltype(target_GetSpeedInfo)>("JLINKARM_GetSpeedInfo");
        target_GetWatchpointInfoEx        = m_Library->GetFunction<decltype(target_GetWatchpointInfoEx)>("JLINKARM_GetWPInfoEx");
        target_Run                        = m_Library->GetFunction<decltype(target_Run)>("JLINKARM_Go");
        target_RunAllowSimulation         = m_Library->GetFunction<decltype(target_RunAllowSimulation)>("JLINKARM_GoAllowSim");
        target_RunNumberOfInstructions    = m_Library->GetFunction<decltype(target_RunNumberOfInstructions)>("JLINKARM_GoEx");
        target_RunNumberOfClocks          = m_Library->GetFunction<decltype(target_RunNumberOfClocks)>("JLINKARM_GoHalt");
        target_RunAndDisableInterrupts    = m_Library->GetFunction<decltype(target_RunAndDisableInterrupts)>("JLINKARM_GoIntDis");
        target_Halt                       = m_Library->GetFunction<decltype(target_Halt)>("JLINKARM_Halt");
        library_InErrorState              = m_Library->GetFunction<decltype(library_InErrorState)>("JLINKARM_HasError");
        target_IsConnected                = m_Library->GetFunction<decltype(target_IsConnected)>("JLINKARM_IsConnected");
        target_IsHalted                   = m_Library->GetFunction<decltype(target_IsHalted)>("JLINKARM_IsHalted");
        probe_IsConnectionOpen            = m_Library->GetFunction<decltype(probe_IsConnectionOpen)>("JLINKARM_IsOpen");
        library_Lock                      = m_Library->GetFunction<decltype(library_Lock)>("JLINKARM_Lock");
        target_Measure_CPU_Speed          = m_Library->GetFunction<decltype(target_Measure_CPU_Speed)>("JLINKARM_MeasureCPUSpeed");
        target_Measure_CPU_Speed_Ex       = m_Library->GetFunction<decltype(target_Measure_CPU_Speed_Ex)>("JLINKARM_MeasureCPUSpeedEx");
        probe_Connect                     = m_Library->GetFunction<decltype(probe_Connect)>("JLINKARM_Open");
        probe_ConnectEx                   = m_Library->GetFunction<decltype(probe_ConnectEx)>("JLINKARM_OpenEx");
        target_ReadCodeMemory             = m_Library->GetFunction<decltype(target_ReadCodeMemory)>("JLINKARM_ReadCodeMem");
        target_Read_ICE_Register          = m_Library->GetFunction<decltype(target_Read_ICE_Register)>("JLINKARM_ReadICEReg");
        target_ReadMemory                 = m_Library->GetFunction<decltype(target_ReadMemory)>("JLINKARM_ReadMem");
        target_ReadMemoryEx               = m_Library->GetFunction<decltype(target_ReadMemoryEx)>("JLINKARM_ReadMemEx");
        target_ReadMemoryImmediate        = m_Library->GetFunction<decltype(target_ReadMemoryImmediate)>("JLINKARM_ReadMemHW");
        target_ReadMemoryIndirect         = m_Library->GetFunction<decltype(target_ReadMemoryIndirect)>("JLINKARM_ReadMemIndirect");
        target_ReadMemory_8               = m_Library->GetFunction<decltype(target_ReadMemory_8)>("JLINKARM_ReadMemU8");
        target_ReadMemory_16              = m_Library->GetFunction<decltype(target_ReadMemory_16)>("JLINKARM_ReadMemU16");
        target_ReadMemory_32              = m_Library->GetFunction<decltype(target_ReadMemory_32)>("JLINKARM_ReadMemU32");
        target_ReadMemory_64              = m_Library->GetFunction<decltype(target_ReadMemory_64)>("JLINKARM_ReadMemU64");
        target_ReadMemoryZonedEx          = m_Library->GetFunction<decltype(target_ReadMemoryZonedEx)>("JLINK_ReadMemZonedEx");
        target_ReadRegister               = m_Library->GetFunction<decltype(target_ReadRegister)>("JLINKARM_ReadReg");
        target_ReadRegisters              = m_Library->GetFunction<decltype(target_ReadRegisters)>("JLINKARM_ReadRegs");
        target_Reset                      = m_Library->GetFunction<decltype(target_Reset)>("JLINKARM_Reset");
        target_ResetAndRun                = m_Library->GetFunction<decltype(target_ResetAndRun)>("JLINKARM_ResetNoHalt");
        target_SelectTraceSource          = m_Library->GetFunction<decltype(target_SelectTraceSource)>("JLINKARM_SelectTraceSource");
        target_SetBreakpoint              = m_Library->GetFunction<decltype(target_SetBreakpoint)>("JLINKARM_SetBP");
        target_SetBreakpointEx            = m_Library->GetFunction<decltype(target_SetBreakpointEx)>("JLINKARM_SetBPEx");
        target_SetDataEvent               = m_Library->GetFunction<decltype(target_SetDataEvent)>("JLINKARM_SetDataEvent");
        target_SetEndiannes               = m_Library->GetFunction<decltype(target_SetEndiannes)>("JLINKARM_SetEndian");
        probe_SetErrorCallback            = m_Library->GetFunction<decltype(probe_SetErrorCallback)>("JLINKARM_SetErrorOutHandler");
        probe_SetHookUnsecureDialog       = m_Library->GetFunction<decltype(probe_SetHookUnsecureDialog)>("JLINK_SetHookUnsecureDialog");
        target_SetInitializeRegistersOnReset =
            m_Library->GetFunction<decltype(target_SetInitializeRegistersOnReset)>("JLINKARM_SetInitRegsOnReset");
        target_SetMaxInterfaceSpeed = m_Library->GetFunction<decltype(target_SetMaxInterfaceSpeed)>("JLINKARM_SetMaxSpeed");
        target_SetResetPin          = m_Library->GetFunction<decltype(target_SetResetPin)>("JLINKARM_SetRESET");
        target_SetResetDelay        = m_Library->GetFunction<decltype(target_SetResetDelay)>("JLINKARM_SetResetDelay");
        target_SetResetType         = m_Library->GetFunction<decltype(target_SetResetType)>("JLINKARM_SetResetType");
        target_SetInterfaceSpeed    = m_Library->GetFunction<decltype(target_SetInterfaceSpeed)>("JLINKARM_SetSpeed");
        probe_SetWaitFunction       = m_Library->GetFunction<decltype(probe_SetWaitFunction)>("JLINKARM_SetWaitFunction");
        probe_SetWarningCallback    = m_Library->GetFunction<decltype(probe_SetWarningCallback)>("JLINKARM_SetWarnOutHandler");
        target_SetWatchpoint        = m_Library->GetFunction<decltype(target_SetWatchpoint)>("JLINKARM_SetWP");
        target_SimulateInstruction  = m_Library->GetFunction<decltype(target_SimulateInstruction)>("JLINKARM_SimulateInstruction");
        target_Step                 = m_Library->GetFunction<decltype(target_Step)>("JLINKARM_Step");
        library_Unlock              = m_Library->GetFunction<decltype(library_Unlock)>("JLINKARM_Unlock");
        probe_UpdateProbeFirmware   = m_Library->GetFunction<decltype(probe_UpdateProbeFirmware)>("JLINKARM_UpdateFirmware");
        probe_UpdateProbeFirmwareIfNewer =
            m_Library->GetFunction<decltype(probe_UpdateProbeFirmwareIfNewer)>("JLINKARM_UpdateFirmwareIfNewer");
        target_WaitForHalt             = m_Library->GetFunction<decltype(target_WaitForHalt)>("JLINKARM_WaitForHalt");
        target_Write_ICE_Register      = m_Library->GetFunction<decltype(target_Write_ICE_Register)>("JLINKARM_WriteICEReg");
        target_WriteProgram            = m_Library->GetFunction<decltype(target_WriteProgram)>("JLINKARM_WriteMem");
        target_WriteMemoryDelayed      = m_Library->GetFunction<decltype(target_WriteMemoryDelayed)>("JLINKARM_WriteMemDelayed");
        target_WriteMemoryEx           = m_Library->GetFunction<decltype(target_WriteMemoryEx)>("JLINKARM_WriteMemEx");
        target_WriteMemoryImmediate    = m_Library->GetFunction<decltype(target_WriteMemoryImmediate)>("JLINKARM_WriteMemHW");
        target_WriteMemoryDescriptor   = m_Library->GetFunction<decltype(target_WriteMemoryDescriptor)>("JLINKARM_WriteMemMultiple");
        target_WriteRegister           = m_Library->GetFunction<decltype(target_WriteRegister)>("JLINKARM_WriteReg");
        target_WriteRegisters          = m_Library->GetFunction<decltype(target_WriteRegisters)>("JLINKARM_WriteRegs");
        target_WriteMemory_8           = m_Library->GetFunction<decltype(target_WriteMemory_8)>("JLINKARM_WriteU8");
        target_WriteMemory_16          = m_Library->GetFunction<decltype(target_WriteMemory_16)>("JLINKARM_WriteU16");
        target_WriteMemory_32          = m_Library->GetFunction<decltype(target_WriteMemory_32)>("JLINKARM_WriteU32");
        target_WriteMemory_64          = m_Library->GetFunction<decltype(target_WriteMemory_64)>("JLINKARM_WriteU64");
        target_WriteMemoryZonedEx      = m_Library->GetFunction<decltype(target_WriteMemoryZonedEx)>("JLINK_WriteMemZonedEx");
        target_WriteVectorCatch        = m_Library->GetFunction<decltype(target_WriteVectorCatch)>("JLINKARM_WriteVectorCatch");
        target_WriteVerifyMemory       = m_Library->GetFunction<decltype(target_WriteVerifyMemory)>("JLINKARM_WriteVerifyMem");
        target_GetCore                 = m_Library->GetFunction<decltype(target_GetCore)>("JLINKARM_CORE_GetFound");
        target_CoreSight_Configure     = m_Library->GetFunction<decltype(target_CoreSight_Configure)>("JLINKARM_CORESIGHT_Configure");
        target_CoreSight_ReadAPDPReg   = m_Library->GetFunction<decltype(target_CoreSight_ReadAPDPReg)>("JLINKARM_CORESIGHT_ReadAPDPReg");
        target_CoreSight_WriteAPDP     = m_Library->GetFunction<decltype(target_CoreSight_WriteAPDP)>("JLINKARM_CORESIGHT_WriteAPDPReg");
        target_CP15_IsPresent          = m_Library->GetFunction<decltype(target_CP15_IsPresent)>("JLINKARM_CP15_IsPresent");
        target_CP15_ReadEx             = m_Library->GetFunction<decltype(target_CP15_ReadEx)>("JLINKARM_CP15_ReadEx");
        target_CP15_ReadRegister       = m_Library->GetFunction<decltype(target_CP15_ReadRegister)>("JLINKARM_CP15_ReadReg");
        target_CP15_WriteEx            = m_Library->GetFunction<decltype(target_CP15_WriteEx)>("JLINKARM_CP15_WriteEx");
        target_CP15_WriteRegister      = m_Library->GetFunction<decltype(target_CP15_WriteRegister)>("JLINKARM_CP15_WriteReg");
        probe_AddLicense               = m_Library->GetFunction<decltype(probe_AddLicense)>("JLINK_EMU_AddLicense");
        probe_EraseLicenses            = m_Library->GetFunction<decltype(probe_EraseLicenses)>("JLINK_EMU_EraseLicenses");
        probe_GetLicenses              = m_Library->GetFunction<decltype(probe_GetLicenses)>("JLINK_EMU_GetLicenses");
        probe_GetCounters              = m_Library->GetFunction<decltype(probe_GetCounters)>("JLINKARM_EMU_GetCounters");
        probe_GetDeviceList            = m_Library->GetFunction<decltype(probe_GetDeviceList)>("JLINKARM_EMU_GetList");
        probe_GetConnectedDeviceCount  = m_Library->GetFunction<decltype(probe_GetConnectedDeviceCount)>("JLINKARM_EMU_GetNumDevices");
        probe_IsCapableOfEx            = m_Library->GetFunction<decltype(probe_IsCapableOfEx)>("JLINKARM_EMU_HasCapEx");
        probe_IsConnected              = m_Library->GetFunction<decltype(probe_IsConnected)>("JLINKARM_EMU_IsConnected");
        probe_SelectBySerialNumber_USB = m_Library->GetFunction<decltype(probe_SelectBySerialNumber_USB)>("JLINKARM_EMU_SelectByUSBSN");
        probe_SelectByIP               = m_Library->GetFunction<decltype(probe_SelectByIP)>("JLINKARM_EMU_SelectIP");
        probe_SelectBySerialNumber_Ethernet =
            m_Library->GetFunction<decltype(probe_SelectBySerialNumber_Ethernet)>("JLINKARM_EMU_SelectIPBySN");
        target_ETB_IsPresent       = m_Library->GetFunction<decltype(target_ETB_IsPresent)>("JLINKARM_ETB_IsPresent");
        target_ETB_ReadRegister    = m_Library->GetFunction<decltype(target_ETB_ReadRegister)>("JLINKARM_ETB_ReadReg");
        target_ETB_WriteRegister   = m_Library->GetFunction<decltype(target_ETB_WriteRegister)>("JLINKARM_ETB_WriteReg");
        target_ETM_IsPresent       = m_Library->GetFunction<decltype(target_ETM_IsPresent)>("JLINKARM_ETM_IsPresent");
        target_ETM_ReadRegister    = m_Library->GetFunction<decltype(target_ETM_ReadRegister)>("JLINKARM_ETM_ReadReg");
        target_ETM_StartTrace      = m_Library->GetFunction<decltype(target_ETM_StartTrace)>("JLINKARM_ETM_StartTrace");
        target_ETM_WriteRegister   = m_Library->GetFunction<decltype(target_ETM_WriteRegister)>("JLINKARM_ETM_WriteReg");
        probe_HSS_GetCapabilities  = m_Library->GetFunction<decltype(probe_HSS_GetCapabilities)>("JLINK_HSS_GetCaps");
        target_HSS_Start           = m_Library->GetFunction<decltype(target_HSS_Start)>("JLINK_HSS_Start");
        target_HSS_Stop            = m_Library->GetFunction<decltype(target_HSS_Stop)>("JLINK_HSS_Stop");
        target_HSS_Read            = m_Library->GetFunction<decltype(target_HSS_Read)>("JLINK_HSS_Read");
        target_RawTrace_Control    = m_Library->GetFunction<decltype(target_RawTrace_Control)>("JLINKARM_RAWTRACE_Control");
        target_RawTrace_Read       = m_Library->GetFunction<decltype(target_RawTrace_Read)>("JLINKARM_RAWTRACE_Read");
        target_RTT_Control         = m_Library->GetFunction<decltype(target_RTT_Control)>("JLINK_RTTERMINAL_Control");
        target_RTT_Read            = m_Library->GetFunction<decltype(target_RTT_Read)>("JLINK_RTTERMINAL_Read");
        target_RTT_Write           = m_Library->GetFunction<decltype(target_RTT_Write)>("JLINK_RTTERMINAL_Write");
        target_STrace_Config       = m_Library->GetFunction<decltype(target_STrace_Config)>("JLINK_STRACE_Config");
        target_STrace_Control      = m_Library->GetFunction<decltype(target_STrace_Control)>("JLINK_STRACE_Control");
        target_STrace_Read         = m_Library->GetFunction<decltype(target_STrace_Read)>("JLINK_STRACE_Read");
        target_STrace_GetInstStats = m_Library->GetFunction<decltype(target_STrace_GetInstStats)>("JLINK_STRACE_GetInstStats");
        target_STrace_Start        = m_Library->GetFunction<decltype(target_STrace_Start)>("JLINK_STRACE_Start");
        target_STrace_Stop         = m_Library->GetFunction<decltype(target_STrace_Stop)>("JLINK_STRACE_Stop");
        target_SWD_GetData         = m_Library->GetFunction<decltype(target_SWD_GetData)>("JLINK_SWD_GetData");
        target_SWD_GetData_8       = m_Library->GetFunction<decltype(target_SWD_GetData_8)>("JLINK_SWD_GetU8");
        target_SWD_GetData_16      = m_Library->GetFunction<decltype(target_SWD_GetData_16)>("JLINK_SWD_GetU16");
        target_SWD_GetData_32      = m_Library->GetFunction<decltype(target_SWD_GetData_32)>("JLINK_SWD_GetU32");
        target_SWD_StoreGetRaw     = m_Library->GetFunction<decltype(target_SWD_StoreGetRaw)>("JLINK_SWD_StoreGetRaw");
        target_SWD_StoreRaw        = m_Library->GetFunction<decltype(target_SWD_StoreRaw)>("JLINK_SWD_StoreRaw");
        target_SWD_SyncBits        = m_Library->GetFunction<decltype(target_SWD_SyncBits)>("JLINK_SWD_SyncBits");
        target_SWD_SyncBytes       = m_Library->GetFunction<decltype(target_SWD_SyncBytes)>("JLINK_SWD_SyncBytes");
        target_SWO_Control         = m_Library->GetFunction<decltype(target_SWO_Control)>("JLINKARM_SWO_Control");
        target_SWO_Disable         = m_Library->GetFunction<decltype(target_SWO_Disable)>("JLINKARM_SWO_DisableTarget");
        target_SWO_Enable          = m_Library->GetFunction<decltype(target_SWO_Enable)>("JLINKARM_SWO_EnableTarget");
        target_SWO_GetCompatibleSpeeds =
            m_Library->GetFunction<decltype(target_SWO_GetCompatibleSpeeds)>("JLINKARM_SWO_GetCompatibleSpeeds");
        target_SWO_Read               = m_Library->GetFunction<decltype(target_SWO_Read)>("JLINKARM_SWO_Read");
        target_SWO_ReadStimulus       = m_Library->GetFunction<decltype(target_SWO_ReadStimulus)>("JLINKARM_SWO_ReadStimulus");
        target_GetAvailableInterfaces = m_Library->GetFunction<decltype(target_GetAvailableInterfaces)>("JLINKARM_TIF_GetAvailable");
        target_SelectInterface        = m_Library->GetFunction<decltype(target_SelectInterface)>("JLINKARM_TIF_Select");
        target_Trace_Control          = m_Library->GetFunction<decltype(target_Trace_Control)>("JLINKARM_TRACE_Control");
        target_Trace_Read             = m_Library->GetFunction<decltype(target_Trace_Read)>("JLINKARM_TRACE_Read");
        probe_SetFlashProgProgressCallback =
            m_Library->GetFunction<decltype(probe_SetFlashProgProgressCallback)>("JLINK_SetFlashProgProgressCallback");

        m_Loaded = true;
    }

} // namespace HWD::Probe::Driver
